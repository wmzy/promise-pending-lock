{
  "name": "promise-pending-lock",
  "version": "0.2.0",
  "description": "Call an async function multi before the first resolve, only run once and share the result.",
  "main": "index.js",
  "scripts": {
    "test": "nyc mocha -r babel-core/register -r should -r should-sinon",
    "build": "babel promise-pending-lock.js --out-file index.js",
    "prepublish": "npm run build",
    "coverage": "nyc report --reporter=text-lcov | coveralls"
  },
  "keywords": [
    "promise",
    "lock"
  ],
  "author": "wmzy",
  "repository": {
    "type": "git",
    "url": "https://github.com/wmzy/promise-pending-lock.git"
  },
  "license": "ISC",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "coveralls": "^3.0.0",
    "lodash": "^4.17.4",
    "mocha": "^4.0.1",
    "nyc": "^11.3.0",
    "should": "^13.1.3",
    "should-sinon": "0.0.6",
    "sinon": "^4.1.2"
  }
}
